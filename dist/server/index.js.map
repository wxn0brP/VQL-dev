{
  "version": 3,
  "sources": ["../../node_modules/@wxn0brp/flanker-ui/src/html.ts", "../../node_modules/@wxn0brp/db-core/dist/utils/hasFields.js", "../../node_modules/@wxn0brp/db-core/dist/utils/hasFieldsAdvanced.js", "../../node_modules/@wxn0brp/db-core/dist/utils/updateFindObject.js", "../../node_modules/@wxn0brp/db-core/dist/customFileCpu.js", "../../node_modules/@wxn0brp/db-core/dist/helpers/gen.js", "../../node_modules/@wxn0brp/db-core/dist/utils/sort.js", "../../node_modules/@wxn0brp/db-core/dist/utils/action.js", "../../node_modules/@wxn0brp/db-core/dist/helpers/updateOneOrAdd.js", "../../node_modules/@wxn0brp/db-core/dist/base/actions.js", "../../node_modules/@wxn0brp/db-core/dist/base/custom.js", "../../node_modules/@wxn0brp/db-core/dist/helpers/CollectionManager.js", "../../node_modules/@wxn0brp/db-core/dist/helpers/forge.js", "../../node_modules/@wxn0brp/event-emitter/dist/index.js", "../../node_modules/@wxn0brp/db-core/dist/helpers/executor.js", "../../node_modules/@wxn0brp/db-core/dist/version.js", "../../node_modules/@wxn0brp/db-core/dist/db/valthera.js", "../../node_modules/@wxn0brp/db-core/dist/db/memory.js", "../../src/server/vql.ts", "../../src/server/channel.ts", "../../node_modules/@wxn0brp/db-client/dist/function.js", "../../node_modules/@wxn0brp/db-client/dist/version.js", "../../node_modules/@wxn0brp/db-client/dist/valthera.js", "../../src/server/html.ts", "../../src/server/form.ts", "../../src/server/config.ts"],
  "sourcesContent": ["const proto = {\n    html(this: HTMLElement, v?: string): string | HTMLElement {\n        if (v !== undefined) {\n            this.innerHTML = v;\n            return this;\n        } else {\n            return this.innerHTML;\n        }\n    },\n\n    v(this: HTMLInputElement, v?: string): string | HTMLInputElement {\n        if (v !== undefined) {\n            this.value = v;\n            return this;\n        } else {\n            return this.value;\n        }\n    },\n\n    on(this: HTMLElement, event: string, fn: EventListenerOrEventListenerObject): void {\n        this.addEventListener(event, fn);\n    },\n\n    css(this: HTMLElement, style: string | Record<string, string>, val: string | null = null): void {\n        if (typeof style === \"string\") {\n            if (val !== null) {\n                this.style[style] = val;\n            } else {\n                this.style.cssText = style;\n            }\n        } else {\n            Object.assign(this.style, style);\n        }\n    },\n\n    attrib(this: HTMLElement, att: string, arg: string | null = null): string | HTMLElement {\n        if (arg !== null) {\n            this.setAttribute(att, arg);\n            return this;\n        } else {\n            return this.getAttribute(att) || \"\";\n        }\n    },\n\n    clA(this: HTMLElement, ...arg: string[]): HTMLElement {\n        this.classList.add(...arg);\n        return this;\n    },\n\n    clR(this: HTMLElement, ...arg: string[]): HTMLElement {\n        this.classList.remove(...arg);\n        return this;\n    },\n\n    clT(this: HTMLElement, className: string, force?: boolean): HTMLElement {\n        this.classList.toggle(className, force);\n        return this;\n    },\n\n    animateFade(this: HTMLElement, from: number, options: { time?: number; cb?: () => void } = {}): HTMLElement {\n        const { time = 200, cb } = options;\n        const style = this.style;\n        const steps = 50;\n        const timeToStep = time / steps;\n        const d = (from === 0 ? 1 : -1) / steps;\n        let index = 0;\n        style.opacity = from.toString();\n\n        const interval = setInterval(() => {\n            if (index >= steps) {\n                clearInterval(interval);\n                cb?.();\n                return;\n            }\n            style.opacity = (parseFloat(style.opacity || \"0\") + d).toString();\n            index++;\n        }, timeToStep);\n        return this;\n    },\n\n    fadeIn(this: HTMLElement, display: string | (() => void) = \"block\", cb?: () => void): HTMLElement {\n        if (typeof display === \"function\") {\n            cb = display;\n            display = \"block\";\n        }\n\n        this.css(\"display\", display);\n        this.animateFade(0, { cb });\n        this.fade = true;\n        return this;\n    },\n\n    fadeOut(this: HTMLElement, cb?: () => void): HTMLElement {\n        this.animateFade(1, { time: 300, cb });\n        setTimeout(() => this.css(\"display\", \"none\"), 300);\n        this.fade = false;\n        return this;\n    },\n\n    async fadeInP(this: HTMLElement, display: string = \"block\"): Promise<HTMLElement> {\n        new Promise<void>((resolve) => {\n            this.fadeIn(display, resolve);\n        });\n        return this;\n    },\n\n    async fadeOutP(): Promise<HTMLElement> {\n        new Promise<void>((resolve) => {\n            this.fadeOut(resolve);\n        });\n        return this;\n    },\n\n    fade: true,\n    fadeToggle(this: HTMLElement): HTMLElement {\n        this.fade ? this.fadeOut() : this.fadeIn();\n        return this;\n    },\n\n    add(this: HTMLElement, child: HTMLElement): HTMLElement {\n        this.appendChild(child);\n        return this;\n    },\n\n    addUp(this: HTMLElement, child: HTMLElement): HTMLElement {\n        this.insertBefore(child, this.firstChild);\n        return this;\n    },\n\n    qs<T = HTMLDivElement>(this: HTMLElement, selector: string): T {\n        return this.querySelector(selector) as T;\n    },\n\n    qsi<T = HTMLInputElement>(this: HTMLElement, selector: string): T {\n        return this.querySelector(selector) as T;\n    },\n\n    qi<T = HTMLDivElement>(this: HTMLElement, id: string): T {\n        return this.querySelector(`[data-id=\"${id}\"]`) as T;\n    },\n\n    qii<T = HTMLInputElement>(this: HTMLElement, id: string): T {\n        return this.querySelector(`[data-id=\"${id}\"]`) as T;\n    },\n};\n\nObject.assign(HTMLElement.prototype, proto);\nObject.assign(document, proto);\nObject.assign(document.body, proto);\nObject.assign(document.documentElement, proto);\nfor (const name of [\"qs\", \"qsi\", \"qi\", \"qii\"]) {\n    if (typeof proto[name] === \"function\") {\n        window[name] = function (...args: any[]) {\n            return proto[name].apply(document, args);\n        };\n    }\n}", "/**\n * Checks if an object matches the standard field comparison.\n * @param obj - The object to check.\n * @param fields - Criteria to compare.\n * @returns Whether the object matches the criteria.\n */\nexport default function hasFields(obj, fields) {\n    const keys = Object.keys(fields);\n    return keys.every(key => {\n        if (obj[key] !== undefined) {\n            if (typeof fields[key] === \"object\" && fields[key] !== null) {\n                return hasFields(obj[key], fields[key]);\n            }\n            return obj[key] === fields[key];\n        }\n        return false;\n    });\n}\n", "import hasFields from \"./hasFields.js\";\n/**\n * Checks if an object meets the criteria specified in the fields with operators.\n */\nexport default function hasFieldsAdvanced(obj, fields) {\n    if (typeof fields !== \"object\" || fields === null) {\n        throw new Error(\"Fields must be an object\");\n    }\n    if (\"$and\" in fields) {\n        return fields[\"$and\"].every(subFields => hasFieldsAdvanced(obj, subFields));\n    }\n    if (\"$or\" in fields) {\n        return fields[\"$or\"].some(subFields => hasFieldsAdvanced(obj, subFields));\n    }\n    // Check various conditions\n    if (!checkConditions(obj, fields))\n        return false;\n    const fieldsSubset = removeAdvancedOperators({ ...fields });\n    return hasFields(obj, fieldsSubset);\n}\nfunction removeAdvancedOperators(fields) {\n    const advancedOperators = [\n        \"and\", \"or\",\n        \"gt\", \"lt\", \"gte\", \"lte\", \"in\", \"nin\",\n        \"exists\",\n        \"type\",\n        \"regex\",\n        \"arrinc\", \"arrincall\", \"size\",\n        \"startsWith\", \"endsWith\",\n        \"between\",\n        \"not\",\n        \"subset\"\n    ].map(operator => \"$\" + operator);\n    advancedOperators.forEach(operator => delete fields[operator]);\n    return fields;\n}\nfunction checkConditions(obj, fields) {\n    return (checkComparison(obj, fields) &&\n        checkExistence(obj, fields) &&\n        checkType(obj, fields) &&\n        checkRegex(obj, fields) &&\n        checkArrayConditions(obj, fields) &&\n        checkStringConditions(obj, fields) &&\n        checkBetween(obj, fields) &&\n        checkNot(obj, fields) &&\n        checkSubset(obj, fields));\n}\nfunction checkComparison(obj, fields) {\n    const comparisonOperators = [\"$gt\", \"$lt\", \"$gte\", \"$lte\", \"$in\", \"$nin\"];\n    for (const operator of comparisonOperators) {\n        if (operator in fields) {\n            for (const entries of Object.entries(fields[operator])) {\n                const [key, value] = entries;\n                switch (operator) {\n                    case \"$gt\":\n                        if (!(obj[key] > value))\n                            return false;\n                        break;\n                    case \"$lt\":\n                        if (!(obj[key] < value))\n                            return false;\n                        break;\n                    case \"$gte\":\n                        if (!(obj[key] >= value))\n                            return false;\n                        break;\n                    case \"$lte\":\n                        if (!(obj[key] <= value))\n                            return false;\n                        break;\n                    case \"$in\":\n                        if (!value.includes(obj[key]))\n                            return false;\n                        break;\n                    case \"$nin\":\n                        if (value.includes(obj[key]))\n                            return false;\n                        break;\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction checkExistence(obj, fields) {\n    if (\"$exists\" in fields) {\n        for (const [key, shouldExist] of Object.entries(fields[\"$exists\"])) {\n            if (shouldExist && !(key in obj))\n                return false;\n            if (!shouldExist && (key in obj))\n                return false;\n        }\n    }\n    return true;\n}\nfunction checkType(obj, fields) {\n    if (\"$type\" in fields) {\n        for (const [key, type] of Object.entries(fields[\"$type\"])) {\n            if (typeof obj[key] !== type)\n                return false;\n        }\n    }\n    return true;\n}\nfunction checkRegex(obj, fields) {\n    if (\"$regex\" in fields) {\n        for (const [key, regexData] of Object.entries(fields[\"$regex\"])) {\n            const regex = typeof regexData === \"string\" ? new RegExp(regexData) : regexData;\n            if (!regex.test(obj[key]))\n                return false;\n        }\n    }\n    return true;\n}\nfunction checkArrayConditions(obj, fields) {\n    if (\"$arrinc\" in fields) {\n        for (const [key, values] of Object.entries(fields[\"$arrinc\"])) {\n            if (!Array.isArray(obj[key]) || !values.some(val => obj[key].includes(val)))\n                return false;\n        }\n    }\n    if (\"$arrincall\" in fields) {\n        for (const [key, values] of Object.entries(fields[\"$arrincall\"])) {\n            if (!Array.isArray(obj[key]) || !values.every(val => obj[key].includes(val)))\n                return false;\n        }\n    }\n    if (\"$size\" in fields) {\n        for (const [key, size] of Object.entries(fields[\"$size\"])) {\n            if (Array.isArray(obj[key]) || typeof obj[key] === \"string\") {\n                if (obj[key].length !== size)\n                    return false;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction checkStringConditions(obj, fields) {\n    if (\"$startsWith\" in fields) {\n        for (const [key, value] of Object.entries(fields[\"$startsWith\"])) {\n            if (typeof obj[key] !== \"string\" || !obj[key].startsWith(value))\n                return false;\n        }\n    }\n    if (\"$endsWith\" in fields) {\n        for (const [key, value] of Object.entries(fields[\"$endsWith\"])) {\n            if (typeof obj[key] !== \"string\" || !obj[key].endsWith(value))\n                return false;\n        }\n    }\n    return true;\n}\nfunction checkBetween(obj, fields) {\n    if (\"$between\" in fields) {\n        for (const [key, [min, max]] of Object.entries(fields[\"$between\"])) {\n            if (typeof obj[key] !== \"number\" || obj[key] < min || obj[key] > max)\n                return false;\n        }\n    }\n    return true;\n}\nfunction checkNot(obj, fields) {\n    if (\"$not\" in fields) {\n        return !hasFieldsAdvanced(obj, fields[\"$not\"]);\n    }\n    return true;\n}\nfunction checkSubset(obj, fields) {\n    if (\"$subset\" in fields) {\n        const setFields = fields[\"$subset\"];\n        return hasFields(obj, setFields);\n    }\n    return true;\n}\n", "/**\n * Updates an object with new values from a findOpts object.\n * @param obj - The object to update.\n * @param findOpts - An object containing options to update the target object.\n * @param [findOpts.transform] - A function to transform the object before applying the other options.\n * @param [findOpts.select] - An array of fields to select from the target object.\n * @param [findOpts.exclude] - An array of fields to exclude from the target object.\n * @returns The updated object.\n */\nexport default function updateFindObject(obj, findOpts) {\n    const { transform, select, exclude, } = findOpts;\n    if (typeof transform === \"function\")\n        obj = transform(obj);\n    if (Array.isArray(exclude)) {\n        exclude.forEach(field => {\n            if (obj.hasOwnProperty(field))\n                delete obj[field];\n        });\n    }\n    if (Array.isArray(select)) {\n        obj = select.reduce((acc, field) => {\n            if (obj.hasOwnProperty(field))\n                acc[field] = obj[field];\n            return acc;\n        }, {});\n    }\n    return obj;\n}\n", "import hasFieldsAdvanced from \"./utils/hasFieldsAdvanced.js\";\nimport updateFindObject from \"./utils/updateFindObject.js\";\nexport function pathRepair(path) {\n    return path.replaceAll(\"//\", \"/\");\n}\nclass CustomFileCpu {\n    _readFile;\n    _writeFile;\n    constructor(readFile, writeFile) {\n        this._readFile = readFile;\n        this._writeFile = writeFile;\n    }\n    async add(file, data) {\n        file = pathRepair(file);\n        let entries = await this._readFile(file);\n        entries.push(data);\n        await this._writeFile(file, entries);\n    }\n    async find(file, arg, context = {}, findOpts = {}) {\n        file = pathRepair(file);\n        const entries = await this._readFile(file);\n        const results = entries.filter(entry => typeof arg === \"function\" ? arg(entry, context) : hasFieldsAdvanced(entry, arg));\n        return results.length ? results.map(res => updateFindObject(res, findOpts)) : [];\n    }\n    async findOne(file, arg, context = {}, findOpts = {}) {\n        file = pathRepair(file);\n        const entries = await this._readFile(file);\n        const result = entries.find(entry => typeof arg === \"function\" ? arg(entry, context) : hasFieldsAdvanced(entry, arg));\n        return result ? updateFindObject(result, findOpts) : false;\n    }\n    async remove(file, one, arg, context = {}) {\n        file = pathRepair(file);\n        let entries = await this._readFile(file);\n        let removed = false;\n        entries = entries.filter(entry => {\n            if (removed && one)\n                return true;\n            let match = typeof arg === \"function\" ? arg(entry, context) : hasFieldsAdvanced(entry, arg);\n            if (match) {\n                removed = true;\n                return false;\n            }\n            return true;\n        });\n        if (!removed)\n            return false;\n        await this._writeFile(file, entries);\n        return true;\n    }\n    async update(file, one, arg, updater, context = {}) {\n        file = pathRepair(file);\n        let entries = await this._readFile(file);\n        let updated = false;\n        entries = entries.map(entry => {\n            if (updated && one)\n                return entry;\n            let match = typeof arg === \"function\" ? arg(entry, context) : hasFieldsAdvanced(entry, arg);\n            if (match) {\n                updated = true;\n                return typeof updater === \"function\" ? updater(entry, context) : { ...entry, ...updater };\n            }\n            return entry;\n        });\n        if (!updated)\n            return false;\n        await this._writeFile(file, entries);\n        return true;\n    }\n}\nexport default CustomFileCpu;\n", "const usedIdsMap = new Map();\nlet lastId;\nconst recentIdsTimestamps = [];\nlet startIndex = 0;\nlet lastGeneratedMs = 0;\nlet lastRandomValue = 0;\n/**\n * Generates a unique random identifier based on time and parts.\n *\n * @param {number[]} [parts] - an array of lengths of parts of the identifier\n * @returns {Id} - a new unique identifier\n */\nexport default function genId(parts = null) {\n    if (parts === null)\n        parts = [1, 1];\n    const time = getTime();\n    const id = getUniqueRandom({\n        time,\n        partsSchema: parts,\n        s: 0,\n    });\n    return id;\n}\n/**\n * Generates a unique random identifier based on time and parts.\n */\nfunction getUniqueRandom(opts) {\n    while (true) {\n        let minValue = 0;\n        if (lastId) {\n            const parts = lastId.split(\"-\");\n            const lastTime = parts.shift();\n            if (lastTime === opts.time) {\n                const int36 = parts.join(\"\");\n                minValue = parseInt(int36, 36) + 1;\n            }\n        }\n        const partsLengthSum = opts.partsSchema.reduce((acc, num) => acc + num, 0);\n        const partsData = generateBase36InRange(minValue, partsLengthSum);\n        const parts = splitStringByArray(opts.partsSchema, partsData);\n        const id = [opts.time, ...parts].join(\"-\");\n        if (!usedIdsMap.has(id)) {\n            usedIdsMap.set(id, true);\n            setTimeout(() => usedIdsMap.delete(id), 1000);\n            lastId = id;\n            return id;\n        }\n        opts.s++;\n        if (opts.s >= partsLengthSum) {\n            opts.time = getTime();\n            opts.s = 0;\n        }\n    }\n}\n/**\n * Tracks the current load of the application by counting the number of ids that have been generated in the last second.\n * @returns The number of ids that have been generated in the last second.\n */\nfunction trackLoad() {\n    const now = Date.now();\n    recentIdsTimestamps.push(now);\n    while (startIndex < recentIdsTimestamps.length && recentIdsTimestamps[startIndex] < now - 1) {\n        startIndex++;\n    }\n    return recentIdsTimestamps.length - startIndex;\n}\n/**\n * Generates a base-36 encoded string with a specified length based on a random value within a range.\n *\n * The function calculates a random value within the base-36 range determined by the provided\n * `minValue` and `length`. It uses a bias mechanism to adjust the randomness based on the\n * current load, ensuring unique generation over short periods. If the system load is low or\n * the current millisecond has changed, a new random value is generated. Otherwise, the random\n * value is incremented by a small amount with certain probabilities.\n *\n * @param minValue - The minimum value for the base-36 encoded number.\n * @param length - The length of the resulting base-36 string.\n * @returns A base-36 encoded string representation of the random value, padded to the specified length.\n */\nfunction generateBase36InRange(minValue, length) {\n    const maxValue = Math.pow(36, length) - 1;\n    const load = trackLoad();\n    const currentMs = Date.now();\n    if (load < 3 || currentMs !== lastGeneratedMs) {\n        lastRandomValue = biasedRandomInRange(minValue, maxValue);\n        lastGeneratedMs = currentMs;\n    }\n    else {\n        const rand = Math.random();\n        if (rand < 0.6) {\n            lastRandomValue += 1;\n        }\n        else if (rand < 0.9) {\n            lastRandomValue += 2;\n        }\n        else {\n            lastRandomValue = biasedRandomInRange(lastRandomValue, maxValue);\n        }\n    }\n    return lastRandomValue.toString(36).padStart(length, \"0\");\n}\n/**\n * Generates a random number between the specified range, but with a bias towards the lower\n * end of the range. The bias is calculated as the cube root of the random value, which\n * will make the random value more likely to be closer to the minimum value.\n * @param min - The minimum value of the range.\n * @param max - The maximum value of the range.\n * @returns A random number between the specified range, with a bias towards the lower end.\n */\nfunction biasedRandomInRange(min, max) {\n    let randomValue = min;\n    const bias = Math.pow(Math.random(), 3);\n    randomValue = Math.floor(min + (max - min) * bias);\n    return Math.min(randomValue, max);\n}\n/**\n * Splits a string into an array of substrings, where each substring is determined by\n * the values in the provided array.\n *\n * @param arr - An array of numbers, where each number represents the length of a substring.\n * @param str - The string to split.\n * @returns An array of substrings, where each element is a substring of the original string,\n *          determined by the corresponding element in the provided array.\n */\nfunction splitStringByArray(arr, str) {\n    let start = 0;\n    return arr.map(length => str.slice(start, start += length));\n}\n/**\n * Gets the current time in a base36 string format.\n */\nfunction getTime() {\n    return new Date().getTime().toString(36);\n}\n", "export function compareSafe(a, b) {\n    // Null/undefined at the end\n    if (a == null && b != null)\n        return 1;\n    if (a != null && b == null)\n        return -1;\n    if (a == null && b == null)\n        return 0;\n    // Compare primitives and Date\n    const typeA = typeof a;\n    const typeB = typeof b;\n    if (typeA === \"string\" && typeB === \"string\") {\n        return a.localeCompare(b);\n    }\n    if ((typeA === \"number\" || a instanceof Date) && (typeB === \"number\" || b instanceof Date)) {\n        return (a < b) ? -1 : (a > b) ? 1 : 0;\n    }\n    if (typeA === \"boolean\" && typeB === \"boolean\") {\n        return (a === b) ? 0 : a ? 1 : -1;\n    }\n    // fallback: if both are objects/arrays or different types, consider equal\n    return 0;\n}\n", "import { compareSafe } from \"./sort.js\";\nexport async function findUtil(query, fileCpu, files) {\n    const { search, context = {}, dbFindOpts = {}, findOpts = {} } = query;\n    const { reverse = false, max = -1, offset = 0, sortBy, sortAsc = true } = dbFindOpts;\n    if (reverse && !sortBy)\n        files.reverse();\n    let datas = [];\n    let totalEntries = 0;\n    let skippedEntries = 0;\n    for (const f of files) {\n        let entries = await fileCpu.find(f, search, context, findOpts);\n        if (reverse && !sortBy)\n            entries.reverse();\n        if (!sortBy) {\n            if (offset > skippedEntries) {\n                const remainingSkip = offset - skippedEntries;\n                if (entries.length <= remainingSkip) {\n                    skippedEntries += entries.length;\n                    continue;\n                }\n                entries = entries.slice(remainingSkip);\n                skippedEntries = offset;\n            }\n            if (max !== -1) {\n                if (totalEntries + entries.length > max) {\n                    const remaining = max - totalEntries;\n                    entries = entries.slice(0, remaining);\n                    totalEntries = max;\n                }\n                else {\n                    totalEntries += entries.length;\n                }\n            }\n            datas.push(...entries);\n            if (max !== -1 && totalEntries >= max)\n                break;\n        }\n        else {\n            datas.push(...entries);\n        }\n    }\n    if (sortBy) {\n        const dir = sortAsc ? 1 : -1;\n        datas.sort((a, b) => compareSafe(a[sortBy], b[sortBy]) * dir);\n        const start = offset;\n        const end = max !== -1 ? offset + max : undefined;\n        datas = datas.slice(start, end);\n    }\n    return datas;\n}\n", "function assignDataPush(data) {\n    if (typeof data !== \"object\" || Array.isArray(data))\n        return;\n    const obj = {};\n    for (const key of Object.keys(data)) {\n        if (key.startsWith(\"$\")) {\n            Object.keys(data[key]).forEach((k) => {\n                obj[k] = data[key][k];\n            });\n        }\n        else\n            obj[key] = data[key];\n    }\n    return obj;\n}\nexport function setDataUsingUpdateOneOrAdd(query) {\n    query.data = Object.assign({}, assignDataPush(query.search), assignDataPush(query.updater), assignDataPush(query.add_arg));\n}\n", "import { setDataUsingUpdateOneOrAdd } from \"../helpers/updateOneOrAdd.js\";\nclass ActionsBase {\n    _inited = true;\n    async init(...args) { }\n    async getCollections() {\n        throw new Error(\"Not implemented\");\n        return [];\n    }\n    async ensureCollection(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async issetCollection(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async add(config) {\n        throw new Error(\"Not implemented\");\n        return {};\n    }\n    async find(config) {\n        throw new Error(\"Not implemented\");\n        return [];\n    }\n    async findOne(config) {\n        throw new Error(\"Not implemented\");\n        return {};\n    }\n    async update(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async updateOne(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async remove(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async removeOne(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async removeCollection(config) {\n        throw new Error(\"Not implemented\");\n        return false;\n    }\n    async updateOneOrAdd(config) {\n        const res = await this.updateOne(config);\n        if (!res) {\n            setDataUsingUpdateOneOrAdd(config);\n            await this.add(config);\n        }\n        return res;\n    }\n}\nexport default ActionsBase;\n", "import genId from \"../helpers/gen.js\";\nimport { findUtil } from \"../utils/action.js\";\nimport ActionsBase from \"./actions.js\";\nexport class CustomActionsBase extends ActionsBase {\n    fileCpu;\n    constructor() {\n        super();\n    }\n    /**\n     * Add a new entry to the specified database.\n     */\n    async add({ collection, data, id_gen = true }) {\n        await this.ensureCollection(arguments[0]);\n        if (id_gen)\n            data._id = data._id || genId();\n        await this.fileCpu.add(collection, data);\n        return data;\n    }\n    /**\n     * Find entries in the specified database based on search criteria.\n     */\n    async find(query) {\n        await this.ensureCollection(query);\n        const data = await findUtil(query, this.fileCpu, [query.collection]);\n        return data;\n    }\n    /**\n     * Find the first matching entry in the specified database based on search criteria.\n     */\n    async findOne({ collection, search, context = {}, findOpts = {} }) {\n        await this.ensureCollection(arguments[0]);\n        let data = await this.fileCpu.findOne(collection, search, context, findOpts);\n        return data || null;\n    }\n    /**\n     * Update entries in the specified database based on search criteria and an updater function or object.\n     */\n    async update({ collection, search, updater, context = {} }) {\n        await this.ensureCollection(arguments[0]);\n        return await this.fileCpu.update(collection, false, search, updater, context);\n    }\n    /**\n     * Update the first matching entry in the specified database based on search criteria and an updater function or object.\n     */\n    async updateOne({ collection, search, updater, context = {} }) {\n        await this.ensureCollection(arguments[0]);\n        return await this.fileCpu.update(collection, true, search, updater, context);\n    }\n    /**\n     * Remove entries from the specified database based on search criteria.\n     */\n    async remove({ collection, search, context = {} }) {\n        await this.ensureCollection(arguments[0]);\n        return await this.fileCpu.remove(collection, false, search, context);\n    }\n    /**\n     * Remove the first matching entry from the specified database based on search criteria.\n     */\n    async removeOne({ collection, search, context = {} }) {\n        await this.ensureCollection(arguments[0]);\n        return await this.fileCpu.remove(collection, true, search, context);\n    }\n}\n", "class CollectionManager {\n    db;\n    collection;\n    constructor(db, collection) {\n        this.db = db;\n        this.collection = collection;\n    }\n    /**\n     * Add data to a database.\n     */\n    async add(data, id_gen = true) {\n        return await this.db.add(this.collection, data, id_gen);\n    }\n    /**\n     * Find data in a database.\n     */\n    async find(search = {}, options = {}, findOpts = {}, context = {}) {\n        return await this.db.find(this.collection, search, options, findOpts, context);\n    }\n    /**\n     * Find one data entry in a database.\n     */\n    async findOne(search = {}, findOpts = {}, context = {}) {\n        return await this.db.findOne(this.collection, search, findOpts, context);\n    }\n    /**\n     * Update data in a database.\n     */\n    async update(search, updater, context = {}) {\n        return await this.db.update(this.collection, search, updater, context);\n    }\n    /**\n     * Update one data entry in a database.\n     */\n    async updateOne(search, updater, context = {}) {\n        return await this.db.updateOne(this.collection, search, updater, context);\n    }\n    /**\n     * Remove data from a database.\n     */\n    async remove(search, context = {}) {\n        return await this.db.remove(this.collection, search, context);\n    }\n    /**\n     * Remove one data entry from a database.\n     */\n    async removeOne(search, context = {}) {\n        return await this.db.removeOne(this.collection, search, context);\n    }\n    /**\n     * Asynchronously updates one entry in a database or adds a new one if it doesn't exist.\n     */\n    async updateOneOrAdd(search, updater, { add_arg = {}, context = {}, id_gen = true }) {\n        return await this.db.updateOneOrAdd(this.collection, search, updater, { add_arg, context, id_gen });\n    }\n}\nexport default CollectionManager;\n", "import CollectionManager from \"./CollectionManager.js\";\nexport function forgeValthera(target) {\n    return new Proxy(target, {\n        get(target, prop, receiver) {\n            if (prop in target) {\n                return Reflect.get(target, prop, receiver);\n            }\n            const collection = new CollectionManager(target, prop);\n            target[prop] = collection;\n            return collection;\n        },\n        set(target, prop, value, receiver) {\n            return Reflect.set(target, prop, value, receiver);\n        }\n    });\n}\nexport function forgeTypedValthera(target) {\n    return forgeValthera(target);\n}\n", "export class VEE {\n    _events = {};\n    /**\n     * Registers an event listener\n     * @param {string} event - event name\n     * @param {Function} listener - function to be called when event occurs\n     */\n    on(event, listener) {\n        if (!this._events[event])\n            this._events[event] = [];\n        this._events[event].push(listener);\n    }\n    /**\n     * Registers a one-time event listener\n     * @param {string} event - event name\n     * @param {Function} listener - function to be called once\n     */\n    once(event, listener) {\n        const onceListener = (...args) => {\n            this.off(event, onceListener);\n            listener(...args);\n        };\n        this.on(event, onceListener);\n    }\n    /**\n     * Removes an event listener.\n     * @param {string} event - event name\n     * @param {Function} listener - listener to remove\n     */\n    off(event, listener) {\n        if (!this._events[event])\n            return;\n        this._events[event] = this._events[event].filter(l => l !== listener);\n    }\n    /**\n     * Emits an event\n     * @param {string} event - event name\n     * @param {...any} args - arguments to be passed to listeners\n     */\n    emit(event, ...args) {\n        const listeners = this._events[event];\n        if (listeners && listeners.length > 0) {\n            listeners.forEach(listener => {\n                listener(...args);\n            });\n        }\n    }\n    /**\n     * Returns the number of listeners for the given event\n     * @param {string} event - event name\n     */\n    listenerCount(event) {\n        return this._events[event]?.length || 0;\n    }\n}\nexport default VEE;\nexport { VEE as EventEmitter };\n", "/**\n * A simple executor for queuing and executing asynchronous operations sequentially.\n * @class\n */\nclass executorC {\n    quote;\n    isExecuting;\n    /**\n     * Create a new executor instance.\n     * @constructor\n     */\n    constructor() {\n        this.quote = [];\n        this.isExecuting = false;\n    }\n    /**\n     * Add an asynchronous operation to the execution queue.\n     */\n    async addOp(func, ...param) {\n        return await new Promise((resolve, reject) => {\n            this.quote.push({\n                func,\n                param,\n                resolve,\n                reject\n            });\n            this.execute();\n        });\n    }\n    /**\n     * Execute the queued asynchronous operations sequentially.\n     */\n    async execute() {\n        if (this.isExecuting)\n            return;\n        this.isExecuting = true;\n        while (this.quote.length > 0) {\n            let q = this.quote.shift();\n            let res = await q.func(...q.param);\n            q.resolve(res);\n        }\n        this.isExecuting = false;\n    }\n}\nexport default executorC;\n", "export const version = \"0.2.3\";\n", "import { VEE } from \"@wxn0brp/event-emitter\";\nimport ActionsBase from \"../base/actions.js\";\nimport CollectionManager from \"../helpers/CollectionManager.js\";\nimport executorC from \"../helpers/executor.js\";\nimport { version } from \"../version.js\";\n/**\n * Represents a database management class for performing CRUD operations.\n * @class\n */\nclass ValtheraClass {\n    dbAction;\n    executor;\n    emiter;\n    version = version;\n    constructor(options = {}) {\n        this.dbAction = options.dbAction || new ActionsBase();\n        this.executor = options.executor || new executorC();\n        this.emiter = new VEE();\n    }\n    async init(...args) {\n        if (this.dbAction._inited)\n            return;\n        const self = this;\n        return await this.executor.addOp(async () => {\n            if (self.dbAction._inited)\n                return;\n            await self.dbAction.init(...args);\n            self.dbAction._inited = true;\n        });\n    }\n    async execute(name, query) {\n        await this.init();\n        const result = await this.executor.addOp(this.dbAction[name].bind(this.dbAction), query);\n        const emitArgs = Array.from(arguments).slice(1);\n        this.emiter.emit(name, emitArgs, result);\n        this.emiter.emit(\"*\", name, emitArgs, result);\n        return result;\n    }\n    /**\n     * Create a new instance of a CollectionManager class.\n     */\n    c(collection) {\n        return new CollectionManager(this, collection);\n    }\n    /**\n     * Get the names of all available databases.\n     */\n    async getCollections() {\n        return await this.execute(\"getCollections\", {});\n    }\n    /**\n     * Check and create the specified collection if it doesn't exist.\n     */\n    async ensureCollection(collection) {\n        return await this.execute(\"ensureCollection\", { collection });\n    }\n    /**\n     * Check if a collection exists.\n     */\n    async issetCollection(collection) {\n        return await this.execute(\"issetCollection\", { collection });\n    }\n    async add(collection, data, id_gen = true) {\n        return await this.execute(\"add\", { collection, data, id_gen });\n    }\n    /**\n     * Find data in a database.\n     */\n    async find(collection, search = {}, dbFindOpts = {}, findOpts = {}, context = {}) {\n        return await this.execute(\"find\", { collection, search, context, dbFindOpts, findOpts });\n    }\n    /**\n     * Find one data entry in a database.\n     */\n    async findOne(collection, search = {}, findOpts = {}, context = {}) {\n        return await this.execute(\"findOne\", { collection, search, context, findOpts });\n    }\n    /**\n     * Update data in a database.\n     */\n    async update(collection, search, updater, context = {}) {\n        return await this.execute(\"update\", { collection, search, updater, context });\n    }\n    /**\n     * Update one data entry in a database.\n     */\n    async updateOne(collection, search, updater, context = {}) {\n        return await this.execute(\"updateOne\", { collection, search, updater, context });\n    }\n    /**\n     * Remove data from a database.\n     */\n    async remove(collection, search, context = {}) {\n        return await this.execute(\"remove\", { collection, search, context });\n    }\n    /**\n     * Remove one data entry from a database.\n     */\n    async removeOne(collection, search, context = {}) {\n        return await this.execute(\"removeOne\", { collection, search, context });\n    }\n    /**\n     * Asynchronously updates one entry in a database or adds a new one if it doesn't exist.\n     */\n    async updateOneOrAdd(collection, search, updater, { add_arg = {}, context = {}, id_gen = true } = {}) {\n        return await this.execute(\"updateOneOrAdd\", { collection, search, updater, add_arg, context, id_gen });\n    }\n    /**\n     * Removes a database collection from the file system.\n     */\n    async removeCollection(collection) {\n        return await this.execute(\"removeCollection\", { collection });\n    }\n}\nexport default ValtheraClass;\n", "import { CustomActionsBase } from \"../base/custom.js\";\nimport CustomFileCpu from \"../customFileCpu.js\";\nimport { forgeValthera } from \"../helpers/forge.js\";\nimport ValtheraClass from \"./valthera.js\";\nexport class MemoryAction extends CustomActionsBase {\n    memory;\n    constructor() {\n        super();\n        this.fileCpu = new CustomFileCpu(this._readMemory.bind(this), this._writeMemory.bind(this));\n        this.memory = new Map();\n    }\n    _readMemory(key) {\n        if (!this.memory.has(key))\n            return [];\n        return this.memory.get(key);\n    }\n    _writeMemory(key, data) {\n        this.memory.set(key, data);\n    }\n    async getCollections() {\n        const collections = Array.from(this.memory.keys());\n        return collections;\n    }\n    async ensureCollection({ collection }) {\n        if (this.issetCollection(collection))\n            return;\n        this.memory.set(collection, []);\n        return true;\n    }\n    async issetCollection({ collection }) {\n        return this.memory.has(collection);\n    }\n    async removeCollection({ collection }) {\n        this.memory.delete(collection);\n        return true;\n    }\n}\nexport default class ValtheraMemory extends ValtheraClass {\n    constructor(...args) {\n        super({ dbAction: new MemoryAction() });\n    }\n}\nexport function createMemoryValthera(data) {\n    const db = new ValtheraMemory();\n    if (!data)\n        return forgeValthera(db);\n    for (const collection of Object.keys(data)) {\n        db.dbAction.memory.set(collection, data[collection]);\n    }\n    return forgeValthera(db);\n}\n", "import { createMemoryValthera } from \"@wxn0brp/db-core\";\nimport VQLProcessor from \"@wxn0brp/vql\";\nexport const db = createMemoryValthera();\nexport const VQL = new VQLProcessor({ db } as any);\n", "import { ValtheraRemote } from \"@wxn0brp/db-client\";\nimport { VQL } from \"./vql\";\n\nexport const channel = new BroadcastChannel(\"VQL\");\n\nfunction getAdapterMeta(id: string, db: ValtheraRemote) {\n    let version = db.version;\n    if (id === \"local\") version += \"-local.0\";\n    else version += \"-client.0\";\n\n    const adapter = {\n        logic_id: id,\n        type: \"valthera\",\n        version,\n    }\n    return adapter;\n}\n\nfunction getAdapters() {\n    const adapters = [];\n    for (const [key, db] of Object.entries(VQL.dbInstances)) {\n        adapters.push(getAdapterMeta(key, db as any));\n    }\n    return adapters;\n}\n\nchannel.onmessage = async (e) => {\n    const data = e.data.data;\n    const type = e.data.type;\n    console.log(type, data);\n\n    if (type === \"getAdapters\") {\n        channel.postMessage({ type: \"getAdapters\", data: getAdapters() });\n    }\n    else if (type === \"vql\") {\n        const id = data.id;\n        if (typeof data.query === \"string\") {\n            console.log(\"->\", VQL._parseQuery(data.query));\n        }\n        const res = await VQL.execute(data.query, {});\n        channel.postMessage({ type: \"vql-\" + id, data: res });\n    }\n}", "function serializeFunctions(data) {\n    const functionKeys = [];\n    function convertFunctionToString(fn) {\n        return typeof fn === \"function\" ? fn.toString() : fn;\n    }\n    function traverseAndSerialize(obj, path = \"\") {\n        Object.keys(obj).forEach((key) => {\n            const value = obj[key];\n            const fullPath = path ? `${path}.${key.replace(/\\./g, \"[dot]\")}` : key;\n            if (typeof value === \"function\") {\n                functionKeys.push(fullPath);\n                obj[key] = convertFunctionToString(value);\n            }\n            else if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (typeof item === \"function\") {\n                        functionKeys.push(`${fullPath}[${index}]`);\n                        value[index] = convertFunctionToString(item);\n                    }\n                });\n            }\n            else if (typeof value === \"object\" && value !== null) {\n                traverseAndSerialize(value, fullPath);\n            }\n        });\n    }\n    traverseAndSerialize(data);\n    return { data, keys: functionKeys };\n}\nexport default serializeFunctions;\n", "export const version = \"0.2.0\";\n", "import CollectionManager from \"@wxn0brp/db-core/helpers/CollectionManager\";\nimport serializeFunctions from \"./function.js\";\nimport { version } from \"./version.js\";\n/**\n * Represents a database management class for performing CRUD operations.\n * Uses a remote database.\n * @class\n */\nexport class ValtheraRemote {\n    remote;\n    version = version;\n    constructor(remote) {\n        if (typeof remote === \"string\") {\n            const urlObj = new URL(remote);\n            const name = urlObj.username;\n            const auth = urlObj.password;\n            if (!name || !auth)\n                throw new Error(\"Invalid remote database\");\n            urlObj.username = \"\";\n            urlObj.password = \"\";\n            const url = urlObj.toString().slice(0, -1);\n            this.remote = {\n                name,\n                url,\n                auth\n            };\n        }\n        else\n            this.remote = remote;\n        if (this.remote.url.endsWith(\"/\"))\n            this.remote.url = this.remote.url.slice(0, -1);\n    }\n    /**\n     * Make a request to the remote database.\n     */\n    async _request(type, params = []) {\n        const processed = serializeFunctions(params);\n        const data = {\n            db: this.remote.name,\n            params: processed.data,\n            keys: processed.keys\n        };\n        const url = this.remote.url + \"/db/\" + type;\n        const res = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": this.remote.auth\n            },\n            body: JSON.stringify(data)\n        }).then(res => res.json());\n        if (res.err)\n            throw new Error(res.msg);\n        return res.result;\n    }\n    /**\n     * Create a new instance of a CollectionManager class.\n     */\n    c(collection) {\n        return new CollectionManager(this, collection);\n    }\n    /**\n     * Get the names of all available databases.\n     */\n    async getCollections() {\n        return await this._request(\"getCollections\", []);\n    }\n    /**\n     * Check and create the specified collection if it doesn't exist.\n     */\n    async ensureCollection(collection) {\n        return await this._request(\"ensureCollection\", [collection]);\n    }\n    /**\n     * Check if a collection exists.\n     */\n    async issetCollection(collection) {\n        return await this._request(\"issetCollection\", [collection]);\n    }\n    /**\n     * Add data to a database.\n     */\n    async add(collection, data, id_gen = true) {\n        return await this._request(\"add\", [collection, data, id_gen]);\n    }\n    /**\n     * Find data in a database.\n     */\n    async find(collection, search, options = {}, findOpts = {}, context = {}) {\n        return await this._request(\"find\", [collection, search, options, findOpts, context]);\n    }\n    /**\n     * Find one data entry in a database.\n     */\n    async findOne(collection, search, findOpts = {}, context = {}) {\n        return await this._request(\"findOne\", [collection, search, findOpts, context]);\n    }\n    /**\n     * Update data in a database.\n     */\n    async update(collection, search, updater, context = {}) {\n        return await this._request(\"update\", [collection, search, updater, context]);\n    }\n    /**\n     * Update one data entry in a database.\n     */\n    async updateOne(collection, search, updater, context = {}) {\n        return await this._request(\"updateOne\", [collection, search, updater, context]);\n    }\n    /**\n     * Remove data from a database.\n     */\n    async remove(collection, search, context = {}) {\n        return await this._request(\"remove\", [collection, search, context]);\n    }\n    /**\n     * Remove one data entry from a database.\n     */\n    async removeOne(collection, search, context = {}) {\n        return await this._request(\"removeOne\", [collection, search, context]);\n    }\n    /**\n     * Asynchronously updates one entry in a database or adds a new one if it doesn't exist.\n     */\n    async updateOneOrAdd(collection, search, arg, opts) {\n        return await this._request(\"updateOneOrAdd\", [collection, search, arg, opts]);\n    }\n    /**\n     * Removes a database collection from the file system.\n     */\n    async removeCollection(name) {\n        return await this._request(\"removeCollection\", [name]);\n    }\n}\nexport default ValtheraRemote;\n", "import { doConfig } from \"./config\";\n\nexport const textarea = document.querySelector(\"textarea\");\nexport const ul = document.querySelector(\"ul\");\n\ndocument.querySelector(\"#run\").addEventListener(\"click\", () => doConfig());\ntextarea.addEventListener(\"keyup\", (e) => {\n    if (e.shiftKey && e.key === \"Enter\") {\n        doConfig();\n    }\n});\n\ndocument.querySelector(\"#save\").addEventListener(\"click\", () => {\n    const data = textarea.value;\n    localStorage.setItem(\"vql-server-config\", data);\n});\n\nsetTimeout(() => {\n    const data = localStorage.getItem(\"vql-server-config\");\n    if (data) {\n        textarea.value = data;\n        doConfig();\n    }\n}, 100);", "import { cfg } from \"./config\";\nimport { textarea } from \"./html\";\n\nconst aliasInput = qsi(\"#alias\");\nconst aliasSelect = qs<HTMLSelectElement>(\"#alias-select\");\nconst nameInput = qsi(\"#name\");\nconst authInput = qsi(\"#auth\");\nconst urlInput = qsi(\"#url\");\n\nexport function buildSelect() {\n    const keys = Object.keys(cfg);\n    aliasSelect.innerHTML = \"\";\n    const add = document.createElement(\"option\");\n    add.value = \"\";\n    add.text = \"Add\";\n    aliasSelect.add(add);\n\n    for (const key of keys) {\n        const option = document.createElement(\"option\");\n        option.value = key;\n        option.text = key;\n        aliasSelect.add(option);\n    }\n}\n\nfunction setValues(name: string) {\n    if (!cfg[name]) return;\n    const url = new URL(cfg[name]);\n\n    aliasSelect.value = name;\n    aliasInput.value = name;\n    nameInput.value = url.username;\n    authInput.value = url.password;\n    urlInput.value = url.origin;\n}\n\naliasInput.addEventListener(\"change\", () => setValues(aliasInput.value));\naliasSelect.addEventListener(\"change\", () => setValues(aliasSelect.value));\n\nqs<HTMLFormElement>(\"form\").addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    const name = aliasInput.value;\n    const url = new URL(urlInput.value);\n    url.username = nameInput.value;\n    url.password = authInput.value;\n\n    textarea.value = textarea\n        .value\n        .split(\"\\n\")\n        .map(line => {\n            if (!line.trim()) return line;\n            const key = line.split(\" \")[0];\n            if (key === name) \n                return `${name} ${url.href}`;\n            return line;\n        })\n        .join(\"\\n\");\n    \n    buildSelect();\n});", "import { ValtheraRemote } from \"@wxn0brp/db-client\";\nimport { textarea, ul } from \"./html\";\nimport { db, VQL } from \"./vql\";\nimport { buildSelect } from \"./form\";\n\ntype Config = Record<string, string>;\nexport let cfg: Config = {};\n\nfunction setDatabases(cfg: Config) {\n    const instances = {};\n    for (const [key, value] of Object.entries(cfg)) {\n        instances[key] = new ValtheraRemote(value);\n    }\n    instances[\"local\"] = db;\n    VQL.dbInstances = instances;\n    VQL.relation.dbs = instances;\n}\n\nfunction getConfig() {\n    cfg = {};\n    const lines = textarea.value.split(\"\\n\");\n    for (const line of lines) {\n        if (!line) continue;\n        const [name, value] = line.split(\" \");\n        cfg[name] = value;\n    }\n}\n\nexport async function doConfig() {\n    getConfig();\n    setDatabases(cfg);\n\n    ul.innerHTML = \"<li>local: OK</li>\";\n\n    const keys = Object.keys(cfg);\n    keys.forEach(async (key) => {\n        const original = cfg[key];\n        const url = new URL(original);\n        const name = url.username;\n        const auth = url.password;\n        url.password = \"\";\n        url.username = \"\";\n\n        let ok = false;\n        try {\n            await fetch(url + \"/db/getCollections\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": auth,\n                },\n                body: JSON.stringify({ db: name }),\n            });\n            ok = true;\n        } catch (err) {\n            ok = false;\n        }\n\n        const li = document.createElement(\"li\");\n        li.textContent = `${key}: ${ok ? \"OK\" : \"ERR\"}`;\n        ul.appendChild(li);\n    });\n    buildSelect();\n}"],
  "mappings": "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",
  "names": ["proto", "v", "event", "fn", "style", "val", "att", "arg", "className", "force", "from", "options", "time", "cb", "steps", "timeToStep", "d", "index", "interval", "display", "resolve", "child", "selector", "id", "name", "args", "hasFields", "obj", "fields", "key", "hasFieldsAdvanced", "obj", "fields", "subFields", "checkConditions", "fieldsSubset", "removeAdvancedOperators", "hasFields", "operator", "checkComparison", "checkExistence", "checkType", "checkRegex", "checkArrayConditions", "checkStringConditions", "checkBetween", "checkNot", "checkSubset", "comparisonOperators", "entries", "key", "value", "shouldExist", "type", "regexData", "values", "val", "size", "min", "max", "setFields", "updateFindObject", "obj", "findOpts", "transform", "select", "exclude", "field", "acc", "pathRepair", "path", "CustomFileCpu", "readFile", "writeFile", "file", "data", "entries", "arg", "context", "findOpts", "results", "entry", "hasFieldsAdvanced", "res", "updateFindObject", "result", "one", "removed", "updater", "updated", "customFileCpu_default", "usedIdsMap", "lastId", "recentIdsTimestamps", "startIndex", "lastGeneratedMs", "lastRandomValue", "genId", "parts", "time", "getTime", "getUniqueRandom", "opts", "minValue", "int36", "partsLengthSum", "acc", "num", "partsData", "generateBase36InRange", "splitStringByArray", "id", "trackLoad", "now", "length", "maxValue", "load", "currentMs", "biasedRandomInRange", "rand", "min", "max", "randomValue", "bias", "arr", "str", "start", "compareSafe", "a", "b", "typeA", "typeB", "findUtil", "query", "fileCpu", "files", "search", "context", "dbFindOpts", "findOpts", "reverse", "max", "offset", "sortBy", "sortAsc", "datas", "totalEntries", "skippedEntries", "f", "entries", "remainingSkip", "remaining", "dir", "a", "b", "compareSafe", "start", "end", "assignDataPush", "data", "obj", "key", "k", "setDataUsingUpdateOneOrAdd", "query", "ActionsBase", "args", "config", "res", "setDataUsingUpdateOneOrAdd", "actions_default", "CustomActionsBase", "actions_default", "collection", "data", "id_gen", "genId", "query", "findUtil", "search", "context", "findOpts", "updater", "CollectionManager", "db", "collection", "data", "id_gen", "search", "options", "findOpts", "context", "updater", "add_arg", "CollectionManager_default", "forgeValthera", "target", "prop", "receiver", "collection", "CollectionManager_default", "value", "VEE", "event", "listener", "onceListener", "args", "l", "listeners", "executorC", "func", "param", "resolve", "reject", "q", "res", "executor_default", "version", "ValtheraClass", "version", "options", "actions_default", "executor_default", "VEE", "args", "self", "name", "query", "result", "emitArgs", "collection", "CollectionManager_default", "data", "id_gen", "search", "dbFindOpts", "findOpts", "context", "updater", "add_arg", "valthera_default", "MemoryAction", "CustomActionsBase", "customFileCpu_default", "key", "data", "collection", "ValtheraMemory", "valthera_default", "args", "createMemoryValthera", "db", "forgeValthera", "VQLProcessor", "db", "createMemoryValthera", "VQL", "channel", "getAdapterMeta", "id", "db", "version", "getAdapters", "adapters", "key", "VQL", "e", "data", "type", "res", "serializeFunctions", "data", "functionKeys", "convertFunctionToString", "fn", "traverseAndSerialize", "obj", "path", "key", "value", "fullPath", "item", "index", "function_default", "version", "ValtheraRemote", "version", "remote", "urlObj", "name", "auth", "url", "type", "params", "processed", "function_default", "data", "res", "collection", "CollectionManager_default", "id_gen", "search", "options", "findOpts", "context", "updater", "arg", "opts", "textarea", "ul", "doConfig", "e", "data", "aliasInput", "aliasSelect", "nameInput", "authInput", "urlInput", "buildSelect", "keys", "cfg", "add", "key", "option", "setValues", "name", "url", "e", "textarea", "line", "cfg", "setDatabases", "instances", "key", "value", "ValtheraRemote", "db", "VQL", "getConfig", "lines", "textarea", "line", "name", "doConfig", "ul", "original", "url", "auth", "ok", "li", "buildSelect"]
}
